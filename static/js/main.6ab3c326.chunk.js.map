{"version":3,"sources":["Mainform.jsx","App.js","index.js"],"names":["Mainform","props","options1","data","links","values","setValue","React","searchValue","setSearchValue","clicked","e","preventDefault","sites","forEach","site","i","length","search","window","open","focus","className","style","display","justifyContent","alignItems","Stack","sx","width","Autocomplete","multiple","id","options","onChange","event","newValue","getOptionLabel","option","defaultValue","filterSelectedOptions","renderInput","params","TextField","label","placeholder","Grid","onSubmit","maxWidth","variant","target","value","Button","onClick","App","landingPageData","setLandingPageData","useState","useEffect","JsonData","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0ZAQO,MAAMA,EAAYC,IACvB,MAAMC,EAAWD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,WAC1CC,EAAQC,GAAYC,cACpBC,EAAaC,GAAkBF,WAAe,QAE/CG,EAAWC,IACfA,EAAEC,iBAEF,IAAIC,EAAQ,GACZR,EAAOS,SAAQ,CAACC,EAAMC,KAGpBH,EAAQA,EAAQ,QAAUE,EACtBC,IAAMX,EAAOY,OAAS,IACxBJ,GAAgB,WAYpB,MAAMK,EAASV,EAAc,IAAMK,EACnCM,OAAOC,KAAK,mCAAqCF,GAAQG,SAG3D,MAAiB,YAAbnB,EACK,2BAGJG,GACHC,EAASJ,GAIT,sBAAKoB,UAAU,WAAf,UACE,qBACEA,UAAU,WACVC,MAAO,CACLC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UALhB,SAQE,cAACC,EAAA,EAAD,CAAOC,GAAI,CAAEC,MAAO,KAApB,SACE,cAACC,EAAA,EAAD,CACEC,UAAQ,EACRC,GAAG,gBACHC,QAAS/B,EACTgC,SAAU,CAACC,EAAOC,KAChB9B,EAAS8B,IAEXC,eAAiBC,GAAWA,EAC5BC,aAAcrC,EACdsC,uBAAqB,EACrBC,YAAcC,GACZ,qBAAKV,GAAG,cAAR,SACE,cAACW,EAAA,EAAD,IACMD,EACJE,MAAM,oBACNC,YAAY,mBAOxB,uBACA,qBAAKvB,UAAU,aAAaC,MAAO,GAAnC,SACE,cAACuB,EAAA,EAAD,UACE,eAAC,IAAD,CAAMC,SAAUrC,EAAhB,UACE,8BACE,cAACiC,EAAA,EAAD,CACEpB,MAAO,CAAEM,MAAO,OAAQmB,SAAU,SAClChB,GAAG,YACHY,MAAM,YACNK,QAAQ,WACRf,SAAWC,IACT1B,EAAe0B,EAAMe,OAAOC,YAIlC,uBAEA,cAACC,EAAA,EAAD,CAAQH,QAAQ,YAAYI,QAAS3C,EAArC,gC,YC3FG,SAAS4C,IACtB,MAAOC,EAAiBC,GAAsBC,mBAAS,IAIvD,OAHAC,qBAAU,KACRF,EAAmBG,KAClB,IAED,sBAAKrC,UAAU,MAAf,UACE,mDACA,uBACA,cAACtB,EAAD,CAAUG,KAAMoD,EAAgBvD,cCTtC,MAAM4D,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAACV,EAAD,MAEFM,K","file":"static/js/main.6ab3c326.chunk.js","sourcesContent":["import * as React from \"react\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Form } from \"reactstrap\";\r\nimport { Grid } from \"@mui/material\";\r\n\r\nexport const Mainform = (props) => {\r\n  const options1 = props.data ? props.data.links : \"loading\";\r\n  const [values, setValue] = React.useState();\r\n  const [searchValue, setSearchValue] = React.useState(\"None\");\r\n\r\n  const clicked = (e) => {\r\n    e.preventDefault();\r\n    //console.log(props.data)\r\n    let sites = \"\";\r\n    values.forEach((site, i) => {\r\n      //console.log(element);\r\n\r\n      sites = sites + \"site:\" + site;\r\n      if (i !== values.length - 1) {\r\n        sites = sites + \" OR \";\r\n      }\r\n    });\r\n    // values.map((d, i) => {\r\n    //   sites = sites + d;\r\n    //   if (i !== values.length - 1) {\r\n    //     sites = sites + \" OR \";\r\n    //   }\r\n    //   return null\r\n    // });\r\n    //console.log(props.data.length);\r\n\r\n    const search = searchValue + \" \" + sites;\r\n    window.open(\"https://www.google.com/search?q=\" + search).focus();\r\n    //console.log(search);\r\n  };\r\n  if (options1 === \"loading\") {\r\n    return \"loading sandbox list...\";\r\n  }\r\n\r\n  if (!values) {\r\n    setValue(options1);\r\n  }\r\n\r\n  return (\r\n    <div className=\"mainform\">\r\n      <div\r\n        className=\"topStack\"\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n      >\r\n        <Stack sx={{ width: 500 }}>\r\n          <Autocomplete\r\n            multiple\r\n            id=\"tags-outlined\"\r\n            options={options1}\r\n            onChange={(event, newValue) => {\r\n              setValue(newValue);\r\n            }}\r\n            getOptionLabel={(option) => option}\r\n            defaultValue={options1}\r\n            filterSelectedOptions\r\n            renderInput={(params) => (\r\n              <div id=\"renderinput\">\r\n                <TextField\r\n                  {...params}\r\n                  label=\"Choose Playground\"\r\n                  placeholder=\"Add...\"\r\n                />\r\n              </div>\r\n            )}\r\n          />\r\n        </Stack>\r\n      </div>\r\n      <br />\r\n      <div className=\"submitForm\" style={{}}>\r\n        <Grid>\r\n          <Form onSubmit={clicked}>\r\n            <div>\r\n              <TextField\r\n                style={{ width: \"100%\", maxWidth: \"500px\" }}\r\n                id=\"searchbox\"\r\n                label=\"Search...\"\r\n                variant=\"outlined\"\r\n                onChange={(event) => {\r\n                  setSearchValue(event.target.value);\r\n                }}\r\n              />\r\n            </div>\r\n            <br />\r\n\r\n            <Button variant=\"contained\" onClick={clicked}>\r\n              Google\r\n            </Button>\r\n          </Form>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./styles.css\";\nimport { Mainform } from \"./Mainform\";\nimport { useState, useEffect } from \"react\";\nimport JsonData from \"./data/data.json\";\n\nexport default function App() {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n  return (\n    <div className=\"App\">\n      <h1>Playground Search</h1>\n      <h2></h2>\n      <Mainform data={landingPageData.Mainform} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}